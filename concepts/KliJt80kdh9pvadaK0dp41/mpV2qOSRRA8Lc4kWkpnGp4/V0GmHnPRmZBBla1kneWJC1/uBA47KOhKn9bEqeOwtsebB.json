{
  "uri" : "local://uBA47KOhKn9bEqeOwtsebB/",
  "name" : "User Notification View",
  "category" : "",
  "parent" : "local://V0GmHnPRmZBBla1kneWJC1/",
  "flags" : "U",
  "lvars" : [ {
    "name" : "model",
    "type" : "local://V0GmHnPRmZBBla1kneWJC1/"
  } ],
  "vars" : [ {
    "name" : "htmlTemplate",
    "expr" : {
      "str" : "<html>\n    <head>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.datatables.net/1.10.9/css/jquery.dataTables.css\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.datatables.net/tabletools/2.2.3/css/dataTables.tableTools.css\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/select2/select2.min.css.gz\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/select2/select2-bootstrap.min.css.gz\">\n        \n        <script src=\"js/select2.min.js.gz\"></script>\n        <script type=\"text/javascript\" charset=\"utf8\" src=\"https://cdn.datatables.net/1.10.9/js/jquery.dataTables.js\"></script>\n        <script type=\"text/javascript\" charset=\"utf8\" src=\"https://cdn.datatables.net/tabletools/2.2.3/js/dataTables.tableTools.min.js\"></script>\n        <script type=\"text/javascript\" charset=\"utf8\" src=\"//cdnjs.cloudflare.com/ajax/libs/knockout.mapping/2.4.1/knockout.mapping.min.js\"></script>\n        \n        <script src=\"js/yoke_v2.min.js.gz\"></script>\n        \n        <style>\n            .usernotifications{\n                margin: 50px;\n            }\n            \n            .actions{\n                padding-bottom:50px;\n            }\n            \n            .noti-log-body{\n                height: 600px;\n                overflow-y: auto;\n            }\n        </style>\n        \n        \n    </head>\n\n    <body>\n        <div class=\"usernotifications\">\n            <div class=\"actions\">\n                <form class=\"form-inline\">\n                    <div class=\"form-group\">\n                        <label class=\"sr-only\" for=\"templates\">Templates</label>\n                        <input type=\"hidden\" class=\"form-control\" id=\"templates\" placeholder=\"Templates\">\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\" data-bind=\"click: sendNotifications\">Send Notifications</button>\n                </form>\n            </div>\n            <div >\n                <table id=\"userNotiTable\" class=\"display\" cellspacing=\"0\" width=\"100%\">\n                </table>\n            </div>\n            \n            <div id=\"sendNoti-dialog-confirm\" tabindex=\"-1\" class=\"modal fade\" role=\"dialog\" data-bind=\"modal: sendNotiDialog.showDialog\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n                            <h4 class=\"modal-title\">Send Notifications</h4>\n                        </div>\n\n                        <div class=\"modal-body\">\n                            <p><span class=\"fa fa-warning fa-lg\"></span>&nbsp; <span data-bind=\"html: sendNotiDialogMsg\"></span></p>\n                            <div class=\"modal-body noti-log-body\" data-bind=\"foreach: sendUsers\">\n                                <p data-bind=\"text: $data\"></p>\n                            </div>\n                        </div>\n\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"><span class=\"glyphicon glyphicon-remove\"></span> Close</button>\n                            <button type=\"button\" class=\"btn btn-success\" data-bind=\"visible: needSubmit, click: sendTestEmail\"><span class=\"glyphicon glyphicon-ok\"></span> Send Test</button>\n                            <button type=\"button\" class=\"btn btn-success\" data-bind=\"visible: needSubmit, click: sendNotiDialog.submit\"><span class=\"glyphicon glyphicon-ok\"></span> Send</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div id=\"sendNoti-dialog-log\" tabindex=\"-1\" class=\"modal fade\" role=\"dialog\" data-bind=\"modal: sendNotiLog.showDialog\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n                            <h4 class=\"modal-title\">Notifications Logs</h4>\n                        </div>\n\n                        <div class=\"modal-body noti-log-body\" data-bind=\"foreach: logMsgs\">\n                            <p data-bind=\"text: $data\"></p>\n                        </div>\n\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"><span class=\"glyphicon glyphicon-remove\"></span> Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n        <script>\n            var table;\n            \n            var excludeUsers = [\"yokedemo\", \"common\", \"cjs_super\"];\n            \n            var userNotis = [];\n            \n            function getAllUsers(userNotiVM){\n                $cjs.search({\n                    uri: \"/common/admin/tJS-xy42lO8qF4twDxPmwF/\",\n                    queryJson: {\n                        \"filtered\" : {\n    \t                    \"filter\" : {\n    \t                \t    \"bool\": {\n    \t                \t\t    \"must_not\": {\n    \t                \t\t\t    \"term\" : {\n        \t                    \t\t    \"name\" : \"private\"\n        \t                    \t    }\n    \t                \t\t    }\n    \t                \t    }\n    \t                    }\n    \t                }\n                    },\n                    from: 0,\n                    size: 10000,\n                    done : function(users){\n                        var userCT = 0;\n                        _.each(users.hits.hits, function(user){ \n                            var notiSelection = user._source.notificationSelections;\n                            \n                            var notiEnable = true;\n                            if (notiSelection && notiSelection.email){\n                                notiEnable = (_.indexOf(notiSelection.email, 0) >= 0);\n                            }\n                            \n                            if (!notiEnable || _.indexOf(excludeUsers, user._source.username) >= 0 || user._source.username.indexOf(\"yoketao\") == 0){\n                                if (!notiEnable){\n                                    console.log(user._source.username+\" has disable user email notification\");\n                                }\n                                userCT++;\n                                return;\n                            }\n                            \n                            $cjs.search({\n                                uri: \"/common/yoke/Zj66xRBTUtAzF4I1JhIuNA/\",\n                                queryJson: {\n                                    \"filtered\" : {\n                                        \"filter\" : {\n                \t                        \"term\" : {\n                                                \"repo\" : \"/\"+user._source.username+\"/yoke/\"\n                                            }\n                                        }\n                                    }\n                                },\n                                from: 0,\n                                size: 10000,\n                                done : function(cards){\n                                    userCT++;\n                                    var userNoti = [];\n                                    userNoti.push(user._source.username);\n                                    userNoti.push(user._source.email);\n                                    var totalNotiCT = 0;\n                                    var totalNotiCardCT = 0;\n                                    var NotiApps = [];\n                                    var lastVisitTS = 0;\n                                    \n                                    _.each(cards.hits.hits, function(card){\n                                        var cardData = JSON.parse(card._source.measureFormula);\n                                        if (cardData.badgeCT){\n                                            totalNotiCT = totalNotiCT + cardData.badgeCT;\n                                            totalNotiCardCT = totalNotiCardCT + 1;\n                                            \n                                            if(_.indexOf(NotiApps, card._source.type) < 0){\n                                                NotiApps.push(card._source.type);\n                                            }\n                                        }\n                                        if (cardData.lastVisitTime || cardData.resetTime){\n                                            var cardLastVisit = (cardData.lastVisitTime)?cardData.lastVisitTime:cardData.resetTime;\n                                            if (cardLastVisit.toString().indexOf(\".\") >= 0){\n                                                cardLastVisit = Number(cardLastVisit.toString().split(\".\")[0])*1000;\n                                            }\n                                            if (cardLastVisit > lastVisitTS){\n                                                lastVisitTS = cardLastVisit;\n                                            }\n                                        }\n                                    });\n                                    \n                                    userNoti.push(totalNotiCT);\n                                    userNoti.push(totalNotiCardCT);\n                                    userNoti.push(NotiApps.join(\",\"));\n                                    userNoti.push((lastVisitTS==0)?\"\":moment(lastVisitTS).format(\"llll\"));\n                                    //userNoti.push(lastVisitTS);\n                                    userNoti.push(Math.max(lastVisitTS, moment(\"2016-01-25 00:00:00\").valueOf()));\n                                    \n                                    userNotis.push(userNoti);\n                                    \n                                    if (userCT == users.hits.hits.length){\n                                        var columns = [ { title: \"Username\"}, { title: \"Email\"}, { title: \"Total Notis\"}, { title: \"Total Noti Cards\"}, { title: \"Noti Apps\"}, { title: \"Last Visit\"}, { title: \"Last Visit TS\"}];\n                                \n                                        table = $('#userNotiTable').DataTable( {\n                                            data: userNotis,\n                                            \"autoWidth\": false,\n                                            columns: columns,\n\t\t                                    \"order\": [[0, \"asc\"]],\n\t\t                                    \"iDisplayLength\": 100,\n                                            \"dom\": 'T<\"clear\">lfrtip',\n                                            \"tableTools\": {\n                                                \"sSwfPath\": \"https://cdn.datatables.net/tabletools/2.2.3/swf/copy_csv_xls_pdf.swf\",\n                                                \"aButtons\": [\n                                                {'sExtends':'copy',\n                                                    \"oSelectorOpts\": { filter: 'applied', order: 'current' }\n                                                },\n                                                {'sExtends':'csv',\n                                                    \"oSelectorOpts\": { filter: 'applied', order: 'current' }\n                                                },\n                                                {'sExtends':'xls',\n                                                    \"oSelectorOpts\": { filter: 'applied', order: 'current' }\n                                                },\n                                                {'sExtends':'pdf',\n                                                    \"oSelectorOpts\": { filter: 'applied', order: 'current' }\n                                                },\n                                                {'sExtends':'print',\n                                                    \"oSelectorOpts\": { filter: 'applied', order: 'current' }\n                                                }]\n                                            }\n\t                                    } );\n                                    }\n                                },\n                                fail : function(jqXHR, textStatus, errorThrown){\n                                    console.log(\"search card failed, status:\" + textStatus + \", error:\" + errorThrown + \", server response:\" + ((jqXHR.responseText)?jqXHR.responseText:\"\"));\n                                }\n                            });\n                        });\n                    },\n                    fail : function(jqXHR, textStatus, errorThrown){\n                        console.log(\"search user failed, status:\" + textStatus + \", error:\" + errorThrown + \", server response:\" + ((jqXHR.responseText)?jqXHR.responseText:\"\"));\n                    }\n                });\n            }\n            \n            function UserNotiVM(){\n                var self = this;\n                \n                this.userNotiConc = $cjs(\"{{{modelUri}}}\");\n                this.userLastSent = self.userNotiConc.prop(\"userLastSent\").val();\n                \n                this.filteredUsers = ko.observableArray();\n                \n                this.emailClient = new $cjs.email.Client(\"MANDRILL\", {\"apiKey\": \"OXcdWVBVVOI5wosX5S5xGw\"});\n                \n                this.templateName = ko.observable();\n                this.sendNotiDialog = new DialogVM();\n                this.sendNotiLog = new DialogVM();\n                this.sendNotiDialogMsg = ko.observable(\"You are about to send notification emails to all users listed above, are you sure?\");\n                this.logMsgs = ko.observableArray();\n                this.needSubmit = ko.observable(true);\n                \n                this.sendUsers = ko.computed(function(){\n                    return _.map(this.filteredUsers(), function(x){\n                       return x[1]; \n                    });\n                }, this)\n                \n                this.sendTestEmail = function(){\n                    self.filteredUsers(_.filter(userNotis, function(x){\n                        return x[0] == \"jamessmith\";\n                    }));\n                    \n                    self.sendEmails();\n                }\n                \n                this.sendNotifications = function(){\n                    self.filteredUsers(self.filterUsers(userNotis));\n                    if (self.filteredUsers().length > 0){\n                        this.needSubmit(true);\n                        self.sendNotiDialogMsg(\"You are about to send notification emails to the following \" + self.filteredUsers().length +\" users, are you sure?\")\n                        self.sendNotiDialog.show(function(){\n                            self.sendEmails();\n                        });\n                    }else{\n                        this.needSubmit(false);\n                        self.sendNotiDialogMsg(\"No users needs to send notifications to.\");\n                        self.sendNotiDialog.show(function(){\n                        });\n                    }\n                }\n                \n                this.filterUsers = function(userLists){\n                    \n                    var dayMili = 24*60*60*1000;\n                    return _.filter(userLists, function(y){\n                        if (y[2] <= 0 || (y[4].indexOf(\"gmail\") >= 0 && y[3] < 2) || (y[4].indexOf(\"gmail\") < 0 && y[3] < 1)){\n                            return false;\n                        }else{\n                            /*\n                            var curTime = (new Date()).getTime();\n                            var lastVisit = y[6];\n                            var lastSent = (self.userLastSent[y[1]])?self.userLastSent[y[1]]:0;\n                            var lastVisitDiff = curTime - lastVisit;\n                            var lastSentDiff = lastSent - lastVisit;\n                            \n                            if (((5*dayMili <= lastVisitDiff && lastVisitDiff < 14*dayMili) && lastSentDiff < 0) || \n                                ((14*dayMili <= lastVisitDiff && lastVisitDiff < 28*dayMili) && lastSentDiff < 14) ||\n                                ((28*dayMili <= lastVisitDiff && lastVisitDiff < 56*dayMili) && lastSentDiff < 28)){\n                                return true;\n                            }else{\n                                return false;\n                            }\n                            */\n                            return true;\n                        }\n                    });\n                }\n                \n                this.sendEmails = function(){\n                    var paramStr = \"{{=<% %>=}}{\\\"template_name\\\": \\\"\"+self.templateName()+\"\\\",\\\"template_content\\\": [{\\\"name\\\":\\\"user notification\\\", \\\"content\\\":\\\"user notification\\\"}],\\\"message\\\" : {\\\"global_merge_vars\\\":[{\\\"name\\\" : \\\"USERID\\\",\\\"content\\\" : \\\"{{USERID}}\\\"},{\\\"name\\\" : \\\"NOTICT\\\",\\\"content\\\" : \\\"{{NOTICT}}\\\"},{\\\"name\\\" : \\\"NOTICARDCT\\\",\\\"content\\\" : \\\"{{NOTICARDCT}}\\\"},{\\\"name\\\" : \\\"APPS\\\",\\\"content\\\" : \\\"{{APPS}}\\\"}],\\\"from_email\\\" : \\\"admin@yoke.io\\\",\\\"to\\\": [{\\\"email\\\": \\\"{{EMAIL}}\\\"}],\\\"subject\\\": \\\"You have unread Yoke notifications\\\"}}<%={{ }}=%>\";\n                    self.sendNotiLog.show(function(){\n                    });\n                    var curTime = (new Date()).getTime();\n                    self.logMsgs([]);\n                    //var count = 0;\n                    _.each(self.filteredUsers(), function(x){\n                    //var x = self.filteredUsers()[0];\n                        try{\n                            var userID = x[0];\n                            var email = x[1];\n                            var totalNotiCT = x[2];\n                            var totalNotiCards = x[3];\n                            var notiApps = x[4];\n                            self.logMsgs.push(\"sending notification email to \"+email+\" ... \");\n                            var paramObj = JSON.parse(Mustache.render(paramStr, {\n                                USERID: userID,\n                                NOTICT: totalNotiCT,\n                                NOTICARDCT: totalNotiCards, \n                                APPS: notiApps,\n                                EMAIL: email\n                            }));\n                            self.emailClient.messages.sendTemplate(paramObj,function(data){\n                                //count++;\n                                self.userLastSent[email] = curTime;\n                                self.logMsgs.push(email + \" is sent!\");\n                                \n                                //if (count == self.filteredUsers().length){\n                                    self.userNotiConc.prop(\"userLastSent\", self.userLastSent);\n                                    $cjs.session.save();\n                                //}\n                            }, function(error1){\n                                //count++\n                                self.logMsgs.push(\"send message error:\"+JSON.stringify(error1));\n                            });\n                            //self.logMsgs.push(\"params:\"+JSON.stringify(paramObj));\n                        }catch(error2){\n                            //count++\n                            self.logMsgs.push(\"error:\"+error2);\n                        }\n                    });\n                }\n\n            }\n            \n            $(function () {\n                var userNotiVM = new UserNotiVM();\n                ko.applyBindings(userNotiVM);\n            \n                getAllUsers(userNotiVM);\n                \n                userNotiVM.emailClient.templates.list({\"label\": \"yoke_card_notification\"}, function(data){\n                    $(\"#templates\").select2({\n                        data: _.map(data, function(x, index, list){\n                            return { \"id\" : x.name, \"text\": x.name };\n                        }),\n                        width: '350px'\n                    }).on(\"change\", function(e) {\n                        userNotiVM.templateName($(\"#templates\").val());\n                    });\n                    \n                    $(\"#templates\").select2(\"val\",(\"Yoke.io User Notification\"), true);\n                },function(error){\n                    console.log(\"list email templates error:\"+JSON.stringify(error));\n                });\n            });\n        </script>\n    </body>\n</html>",
      "strEditMode" : "html",
      "type" : "STRING"
    }
  }, {
    "name" : "_page_propertyMap",
    "expr" : {
      "script" : "return {\"modelUri\": model.uri()};",
      "type" : "SCRIPT"
    }
  }, {
    "name" : "page",
    "expr" : {
      "concept" : "/common/core/Xfh2VQ4HSK9klqbqqR-eBB/",
      "bindings" : {
        "htmlTemplate" : "htmlTemplate",
        "propertyMap" : "_page_propertyMap"
      },
      "type" : "CONCEPT"
    }
  } ],
  "isas" : [ {
    "var" : "page"
  } ],
  "encodedidxhash" : "",
  "isLambda" : true
}