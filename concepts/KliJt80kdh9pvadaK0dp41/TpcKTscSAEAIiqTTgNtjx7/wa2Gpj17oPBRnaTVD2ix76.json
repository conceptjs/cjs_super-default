{
  "uri" : "local://wa2Gpj17oPBRnaTVD2ix76/",
  "name" : "Eval",
  "category" : "",
  "parent" : "local://TpcKTscSAEAIiqTTgNtjx7/",
  "flags" : "U",
  "lvars" : [ ],
  "vars" : [ {
    "name" : "htmlTemplate",
    "expr" : {
      "str" : "<html>\n    <head>\n        \n        <script src=\"js/moment.min.js.gz\"></script>\n        \n        <style>\n            .row {\n                padding: 20px;\n            }\n            \n            #inputUri,\n            #deleteUri{\n                width: 500px;\n            }\n        </style>\n        \n    </head>\n    \n    <body>\n        <div class=\"container\">\n            <div class=\"row\">\n                <button id=\"evalBtn\" type=\"button\" class=\"btn btn-success\">Eval All Cards</button>\n            </div>\n            <div class=\"row\">\n                <button id=\"evalBtn1\" type=\"button\" class=\"btn btn-success\">Count All Cards</button>\n                <input type=\"text\" id=\"cardCount\" name=\"cardCount\" />\n            </div>\n            <div class=\"row\">\n                <button id=\"evalBtn2\" type=\"button\" class=\"btn btn-success\">Eval All Connecotors</button>\n            </div>\n            <div class=\"row\">\n                <button id=\"evalBtn4\" type=\"button\" class=\"btn btn-success\">Patch Users</button>\n            </div>\n            <div class=\"row\">\n                <button id=\"evalBtn9\" type=\"button\" class=\"btn btn-success\">Eval Users in List</button>\n            </div>\n            <div class=\"row\">\n                <button id=\"evalBtn5\" type=\"button\" class=\"btn btn-success\">Patch Todoist Cards</button>\n            </div>\n            <div class=\"row\">\n                <button id=\"evalBtn12\" type=\"button\" class=\"btn btn-success\">Patch Connectors</button>\n            </div>\n            <div class=\"row\">\n                <button id=\"evalBtn6\" type=\"button\" class=\"btn btn-success\">Upgrade Existing users to Yoke UI v2</button>\n            </div>\n            <div class=\"row\">\n                <form class=\"form-inline\">\n                    <div class=\"form-group\">\n                        <label class=\"sr-only\" for=\"inputUri\">Root Concept URI</label>\n                        <input type=\"text\" class=\"form-control\" id=\"inputUri\" placeholder=\"Enter root concept uri\">\n                    </div>\n                    <button id=\"evalBtn3\" type=\"submit\" class=\"btn btn-success\">Eval</button>\n                </form>\n            </div>\n            <div class=\"row\">\n                <input type=\"file\" id=\"files\" name=\"files[]\" multiple />\n            </div>\n            <div class=\"row\">\n                <form class=\"form-inline\">\n                    <div class=\"form-group\">\n                        <label class=\"sr-only\" for=\"deleteUri\">Concept URI to be deleted</label>\n                        <input type=\"text\" class=\"form-control\" id=\"deleteUri\" placeholder=\"Enter concept uri to be deleted\">\n                    </div>\n                    <button id=\"evalBtn7\" type=\"submit\" class=\"btn btn-success\">Delete</button>\n                </form>\n            </div>\n            <div class=\"row\">\n                <button id=\"evalBtn8\" type=\"button\" class=\"btn btn-success\">Delete Cards for App</button>\n            </div>\n            <div class=\"row\">\n                <button id=\"evalBtn10\" type=\"button\" class=\"btn btn-success\">Delete User</button>\n                <input type=\"text\" id=\"deleteUser\" name=\"deleteUser\" />\n            </div>\n            <div class=\"row\">\n                <button id=\"evalBtn11\" type=\"button\" class=\"btn btn-success\">Process all cards</button>\n            </div>\n            \n            <div class=\"row\">\n                <form class=\"form\">\n                    <div class=\"form-group\">\n                        <label class=\"sr-only\" for=\"inputUri\">From Concept URI</label>\n                        <input type=\"text\" class=\"form-control\" id=\"fromUri\" placeholder=\"Enter concept uri to copy from\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"sr-only\" for=\"inputUri\">To Concept URI</label>\n                        <input type=\"text\" class=\"form-control\" id=\"toUri\" placeholder=\"Enter concept uri to copy to\">\n                    </div>\n                    <button id=\"evalBtn13\" type=\"submit\" class=\"btn btn-success\">Copy</button>\n                </form>\n            </div>\n        </div>\n        \n        <script>\n            function findVar(concDef, varName){\n\t            return _.find(concDef.vars, {\n\t\t            \"name\" : varName\n\t            });\n            }\n\n            function deleteCards(uri, ver, type){\n                console.log(\"delete cards for \"+type);\n                var queryJson;\n                \n                if (!type){\n                    queryJson = {\n                        \"match_all\" : {}\n                    };\n                }else{\n                    queryJson = {\n                        \"filtered\" : {\n                            \"filter\" : {\n                \t            \"term\" : {\n                                    \"repo\" : \"/yoketao1/yoke/\"\n                                }\n                            }\n                        }\n                    };\n                }\n                $cjs.search({\n                    uri: uri,\n                    ver: ver,\n                    from: 0,\n                    size: 10000,\n                    queryJson: queryJson,\n                    done : function(data){\n                        console.log(\"total data: \" + data.hits.total);\n                        console.log(\"total return data: \" + data.hits.hits.length);\n                        _.each(data.hits.hits, function(x){\n                            console.log(\"delete card(\"+x._source.uri+\",\"+x._source.type+\",\"+x._source.label+\")\");\n                            //$cjs.session.deleteConcept(deleteUri);\n                            //$cjs.session.save();\n                        });\n                        console.log(\"Done!\");\n                    },\n                    fail : function(jqXHR, textStatus, errorThrown){\n                        console.log(\"failed to search cards, response:\"+jqXHR.responseText);\n                    }\n                });\n            }\n        \n            function countCards(uri, ver, type){\n                console.log(\"cound cards for \"+type);\n                var queryJson;\n                \n                if (!type){\n                    queryJson = {\n                        \"match_all\" : {}\n                    };\n                }else{\n                    queryJson = {\n                        \"filtered\" : {\n                            \"filter\" : {\n                \t            \"term\" : {\n                                    \"type\" : type\n                                }\n                            }\n                        }\n                    };\n                }\n                $cjs.search({\n                    uri: uri,\n                    ver: ver,\n                    from: 0,\n                    size: 10000,\n                    queryJson: queryJson,\n                    done : function(data){\n                        console.log(\"total data: \" + data.hits.total);\n                        console.log(\"total return data: \" + data.hits.hits.length);\n                        $(\"#cardCount\").val(data.hits.total);\n                        console.log(\"Done!\");\n                    },\n                    fail : function(jqXHR, textStatus, errorThrown){\n                        console.log(\"failed to search cards, response:\"+jqXHR.responseText);\n                    }\n                });\n            }\n            \n            function patchConnectors(uri, ver, type){\n                console.log(\"patch connectors for \"+type)\n                var queryJson;\n                \n                if(!type){\n                    return;\n                }\n                \n                    queryJson = {\n                        \"filtered\" : {\n                            \"filter\" : {\n                \t            \"term\" : {\n                                    \"type\" : type\n                                }\n                            }\n                        }\n                    };\n\n                $cjs.search({\n                    uri: uri,\n                    ver: ver,\n                    from: 0,\n                    size: 10000,\n                    queryJson: queryJson,\n                    done : function(data){\n                        console.log(\"total data: \" + data.hits.total);\n                        console.log(\"total return data: \" + data.hits.hits.length);\n                        _.each(data.hits.hits, function(x){\n                            console.log(\"patch connector(\"+x._source.uri+\",\"+x._source.type+\",\"+x._source.label+\")\");\n                            try{\n                                var conc = $cjs(x._source.uri);\n                                conc.prop(\"connector/callMode\", \"SERVER\");\n                                $cjs.session.save();\n                            }catch(error){\n                                console.log(\"eval data(\"+x._source.uri+\",\"+x._source.type+\",\"+x._source.label+\")\");\n                                console.log(\"error:\"+error);\n                            }\n                        });\n                        console.log(\"Done!\");\n                    },\n                    fail : function(jqXHR, textStatus, errorThrown){\n                        console.log(\"failed to search cards, response:\"+jqXHR.responseText);\n                    }\n                });\n            }\n            \n            function evalConc(uri, ver, type){\n                console.log(\"evaluate \"+type)\n                var queryJson;\n                \n                if (!type){\n                    queryJson = {\n                        \"match_all\" : {}\n                    };\n                }else{\n                    queryJson = {\n                        \"filtered\" : {\n                            \"filter\" : {\n                \t            \"term\" : {\n                                    \"type\" : type\n                                }\n                            }\n                        }\n                    };\n                }\n                $cjs.search({\n                    uri: uri,\n                    ver: ver,\n                    from: 0,\n                    size: 10000,\n                    queryJson: queryJson,\n                    done : function(data){\n                        console.log(\"total data: \" + data.hits.total);\n                        console.log(\"total return data: \" + data.hits.hits.length);\n                        _.each(data.hits.hits, function(x){\n                            console.log(\"eval data(\"+x._source.uri+\",\"+x._source.type+\",\"+x._source.label+\")\");\n                            try{\n                                $cjs(x._source.uri,{\n                                    evalAll: true\n                                });\n                              //$cjs(x._source.uri);\n                            }catch(error){\n                                console.log(\"eval data(\"+x._source.uri+\",\"+x._source.type+\",\"+x._source.label+\")\");\n                                console.log(\"error:\"+error);\n                            }\n                        });\n                        console.log(\"Done!\");\n                    },\n                    fail : function(jqXHR, textStatus, errorThrown){\n                        console.log(\"failed to search cards, response:\"+jqXHR.responseText);\n                    }\n                });\n            }\n            \n            function handleFileSelect(evt) {\n                var files = evt.target.files; // FileList object\n\n                // Loop through the FileList and render image files as thumbnails.\n                for (var i = 0, f; f = files[i]; i++) {\n                    var reader = new FileReader();\n\n                    // Closure to capture the file information.\n                    reader.onload = (function(theFile) {\n                        return function(e) {\n                            var users = e.target.result.split(/\\n/);\n                            _.each(users, function(x){\n                                if (x){\n                                    console.log(\"eval user:\"+x);\n                                    $cjs(x,{\n                                        evalAll: true\n                                    });\n                                }\n                            })\n                        };\n                    })(f);\n\n                    // Read in the image file as test\n                    reader.readAsText(f);\n                }\n            }\n\n            document.getElementById('files').addEventListener('change', handleFileSelect, false);\n            \n            function visitChild(uri){\n                //var self = $cjs(uri,{\n                //        evalAll: true\n                //});\n                \n                var self = $cjs(uri);\n                \n                console.log(\"eval name=\"+self.name() + \", uri=\"+self.uri());\n                \n                var childrenUris = self.childrenUris();\n                _.each(childrenUris, function(x){\n                    try{\n                        visitChild(x);\n                    }catch(error){\n                        console.log(\"eval error:\"+error);\n                    }\n                })\n            }\n            \n            function evalUsersByUri(uris){\n                _.each(uris, function(x){\n                    console.log(\"eval user(\"+x+\")\");\n                    try{\n                        //$cjs(x,{\n                            //evalAll: true\n                        //});\n                        //$cjs(x._source.uri);\n                        var user = $cjs(x);\n                        user.prop(\"user/tags\", [\"yoke\"]);\n                        user.prop(\"user/notificationSelections\", { \"email\" : [0]});\n                        $cjs.session.save();\n                    }catch(error){\n                        console.log(\"error:\"+error);\n                    }\n                })\n                console.log(\"done!\");\n            }\n            \n            function evalUsers(uri, ver, type){\n                console.log(\"evaluate \"+type)\n                $cjs.search({\n                    uri: uri,\n                    ver: ver,\n                    from: 0,\n                    size: 10000,\n                    queryJson: {\n                        \"filtered\" : {\n    \t                    \"filter\" : {\n    \t                \t    \"bool\": {\n    \t                \t\t    \"must_not\": {\n    \t                \t\t\t    \"term\" : {\n        \t                    \t\t    \"name\" : \"private\"\n        \t                    \t    }\n    \t                \t\t    }\n    \t                \t    }\n    \t                    }\n    \t                }\n                    },\n                    done : function(data){\n                        console.log(\"total user: \" + data.hits.hits.length);\n                        _.each(data.hits.hits, function(x){\n                            try{\n                            console.log(\"patch user: \" + x._source.username);\n                            var user = $cjs(x._source.uri);\n                            //$cjs(x._source.uri,{\n                            //        evalAll: true\n                            //    });\n                            /*\n                            var oauthCredential = user.prop(\"user/oauthCredentials\").val();\n                            if (_.has(oauthCredential, type)){\n                                console.log(\"user has \" + type +\" connectors, patch it!\");\n                                _.each(_.keys(oauthCredential[type]), function(y){\n                                    oauthCredential[type][y][\"accessToken\"] = \"****\";\n                                    if (_.has(oauthCredential[type][y], \"refreshToken\")){\n                                        oauthCredential[type][y][\"refreshToken\"] = \"****\";\n                                    }\n                                    console.log(y+\" is done!\");\n                                });\n                                user.prop(\"user/oauthCredentials\", oauthCredential);\n                                $cjs.session.save();\n                            }\n                            */\n                            //user.prop(\"user/tags\", [\"yoke\"]);\n                            var currentNoti = user.prop(\"user/notificationSelections\").val();\n                            if (!currentNoti){\n                                currentNoti = {\"email\": [1]};\n                            }else if (!_.has(currentNoti, \"email\")){\n                                currentNoti[\"email\"] = [1];\n                            }else if (_.indexOf(currentNoti.email, 1) < 0){\n                                currentNoti[\"email\"].push(1);\n                            }else if(_.isArray(currentNoti)){\n                                currentNoti = {\"email\": [0,1]};\n                            }\n                            console.log(\"set user notification to:\"+JSON.stringify(currentNoti));\n                            user.prop(\"user/notificationSelections\", currentNoti);\n                            $cjs.session.save();\n                            }catch(error){\n                                console.log(\"error:\"+error);\n                            }\n                        });\n                        console.log(\"Done!\");\n                    },\n                    fail : function(jqXHR, textStatus, errorThrown){\n                        console.log(\"failed to search cards, response:\"+jqXHR.responseText);\n                    }\n                });\n            }\n            \n            function upgradeV2(uri, ver, type){\n                console.log(\"evaluate \"+type)\n                $cjs.search({\n                    uri: uri,\n                    ver: ver,\n                    from: 0,\n                    size: 10000,\n                    queryJson: {\n                        \"filtered\" : {\n    \t                    \"filter\" : {\n    \t                \t    \"bool\": {\n    \t                \t        \"must\" : {\n    \t                \t            \"term\" : {\n        \t                    \t\t    \"name\" : \"sridharyahoo\"\n        \t                    \t    }\n    \t                \t        },\n    \t                \t\t    \"must_not\": {\n    \t                \t\t\t    \"term\" : {\n        \t                    \t\t    \"name\" : \"private\"\n        \t                    \t    }\n    \t                \t\t    }\n    \t                \t    }\n    \t                    }\n    \t                }\n                    },\n                    done : function(data){\n                        console.log(\"total users: \" + data.hits.hits.length);\n                        _.each(data.hits.hits, function(x){\n                            var username = x._source.username;\n                            console.log(\"process user: \" + username);\n                            try{\n                                var yokeRoot = $cjs(\"/\"+username+\"/yoke/\");\n                            }catch(error){\n                                console.log(\"repository not existing, ignore error\");\n                            }\n                            if (_.indexOf([\"common\",\"cjs_super\"], username) < 0 && yokeRoot && yokeRoot.children(\".settings\") && yokeRoot.children(\".settings\").length > 0){\n                                var yokeConfigure = yokeRoot.children(\".settings\")[0].children(\".config\")[0];\n                                if (!yokeConfigure.prop(\"config/configure\").val().version){\n                                    console.log(\"v1 user, add version:2 in configure\");\n                                    var configure = yokeConfigure.prop(\"config/configure\").val();\n                                    configure[\"version\"] = 2;\n                                    yokeConfigure.prop(\"config/configure\", configure);\n                                    \n                                    console.log(\"change OAuth listUri to empty string\");\n                                    var oauth = yokeRoot.children(\".connector\")[0].children(\".oauth\")[0];\n                                    oauth.prop(\"oauth/listUri\", \"\");\n                                    \n                                    console.log(\"replace new configure connectors and select applications\");\n                                    var dashboard = yokeRoot.children(\".dashboard\")[0];\n                                    dashboard.children(\".configconn\")[0].del();\n                                    dashboard.children(\".selectapp\")[0].del();\n                                    $cjs.copyConcept({\n\t    \t\t\t                    puri: dashboard.uri(),\n\t    \t\t\t                    curi: \"/common/yoke/F_4CZkoBHDAiiaQoahq7Y2/\",\n\t    \t\t\t                    newName: \"Configure Connectors\",\n\t    \t\t\t                    deepCopy: false\n\t    \t\t                    });\n\t    \t\t                    $cjs.copyConcept({\n\t    \t\t\t                    puri: dashboard.uri(),\n\t    \t\t\t                    curi: \"/common/yoke/O7FXC6FU_W97Sqd1xKNbE0/\",\n\t    \t\t\t                    newName: \"Select Applications\",\n\t    \t\t\t                    deepCopy: false\n\t    \t\t                    });\n\t    \t\t                    \n\t    \t\t                    console.log(\"copy initialed untitled list\");\n\t    \t\t                    var dataFolder = yokeRoot.children(\".data\")[0];\n\t    \t\t                    var initList = $cjs.copyConcept({\n\t    \t\t\t                    puri: dataFolder.uri(),\n\t    \t\t\t                    curi: \"/common/yoke/Y8JJmMHytlBVp44cG5GWFA/\",\n\t    \t\t\t                    newName: \"Untitled List\",\n\t    \t\t\t                    deepCopy: false\n\t    \t\t                    });\n\t    \t\t                    \n\t    \t\t                    console.log(\"update dashboard for init list\");\n\t    \t\t                    var listArray = [];\n\t    \t\t                    \n\t    \t\t                    console.log(\"add all existing cards in list\");\n\t    \t\t                    var cardUris = dataFolder.childrenUris();\n\t    \t\t                    var cards = _.map(cardUris, function(m){ return $cjs(m);});\n\t    \t\t                    var cardArray = [];\n\t    \t\t                    var sortedCards = _.sortBy(_.filter(cards, function(z){ return z.category() != \".list\"}), function(y){\n\t    \t\t                       return y.prop(\"card/stackX\").val()*100 + y.prop(\"card/stackY\").val(); \n\t    \t\t                    });\n\t    \t\t                    var preStackX = -1;\n\t    \t\t                    var list = initList;\n\t    \t\t                    if (sortedCards.length > 0){\n\t    \t\t                       _.each(sortedCards, function(x){\n\t    \t\t                           console.log(\"process card:\"+x.prop(\"card/label\").val());\n\t    \t\t                           var curStackX = x.prop(\"card/stackX\").val();\n\t    \t\t                           if (preStackX == -1){\n\t    \t\t                               preStackX = curStackX;\n\t    \t\t                           }\n\t    \t\t                           if (preStackX != curStackX){\n\t    \t\t                               list.prop(\"list/cards\", cardArray);\n\t    \t\t                               listArray.push(list.uri());\n\t    \t\t                               \n\t    \t\t                               list = $cjs.copyConcept({\n\t    \t\t\t                                puri: dataFolder.uri(),\n\t    \t\t\t                                curi: \"/common/yoke/Y8JJmMHytlBVp44cG5GWFA/\",\n\t    \t\t\t                                newName: \"Untitled List\",\n\t    \t\t\t                                deepCopy: false\n\t    \t\t                               });\n\t    \t\t                               cardArray = [];\n\t    \t\t                               preStackX = curStackX;\n\t    \t\t                           } \n\t    \t\t                           cardArray.push(x.uri());\n\t    \t\t                           x.prop(\"card/list\", list);\n\t    \t\t                           \n\t    \t\t                           $cjs.session.save();\n\t    \t\t                        });\n\t    \t\t                        \n\t    \t\t                        list.prop(\"list/cards\", cardArray);\n\t    \t\t                        listArray.push(list.uri());\n\t    \t\t                    }else{\n\t    \t\t                        listArray.push(initList.uri());\n\t    \t\t                        initList.prop(\"list/cards\", cardArray);\n\t    \t\t                    }\n\t    \t\t                    dashboard.prop(\"dashboard/lists\", listArray);\n                                    \n                                    $cjs.session.save();\n                                    console.log(\"save changes done!\");\n                                }\n                            }\n                        });\n                        \n                        console.log(\"All done!!\");\n                    },\n                    fail : function(jqXHR, textStatus, errorThrown){\n                        console.log(\"failed to search users, response:\"+jqXHR.responseText);\n                    }\n                });\n            }\n            \n            function patchCards(uri, ver, type){\n                console.log(\"evaluate \"+type);\n                var queryJson;\n                if (!type){\n                    queryJson = {\n                        \"match_all\" : {}\n                    };\n                }else{\n                    queryJson = {\n                        \"filtered\" : {\n                            \"filter\" : {\n                \t            \"term\" : {\n                                    \"type\" : type\n                                }\n                            }\n                        }\n                    };\n                }\n                //var defaultLastVisitTime = moment(\"2016-01-01 00:00:00\").valueOf();\n                $cjs.search({\n                    uri: uri,\n                    ver: ver,\n                    from: 0,\n                    size: 10000,\n                    queryJson: queryJson,\n                    done : function(data){\n                        console.log(\"total card: \" + data.hits.hits.length);\n                        _.each(data.hits.hits, function(x){\n                            try{\n                                console.log(\"process card: \" + x._source.label+\", uri:\"+x._source.uri);\n                                //var viewUrl = x._source.viewUrl;\n                                //var apiUrl = x._source.apiUrl;\n                                //console.log(\"old url:\" + viewUrl);\n                                var cardConc = $cjs(x._source.uri);\n                                //var concDef = $cjs.def(x._source.uri);\n                                //var measureFormula = JSON.parse(findVar(concDef, \"_card_measureFormula\").expr.str);\n                                //var userId = cardConc.prop(\"card/connector/connector/userId\").val();\n                                //var measureFormula = JSON.parse(cardConc.prop(\"card/measureFormula\").val());\n                                //if (measureFormula.action == 1 || measureFormula.action == 2){\n                                    //var urlComp = purl(apiUrl);\n                                    //if (urlComp.param(\"oldest\") && urlComp.param(\"oldest\") != \"{{oldest}}\"){\n                                        //measureFormula.resetTime = urlComp.param(\"oldest\");\n                                    //}\n                                    //var newapiUrl =  urlComp.attr(\"protocol\")+\"://\"+urlComp.attr(\"host\")+urlComp.attr('path')+\"?count=101&channel={{id}}&oldest={{oldest}}\";\n                                    //var newViewUrl = \"https://calendar.google.com/calendar/?authuser=\"+userId;\n                                    //console.log(\"old measureFormula:\" + JSON.stringify(measureFormula));\n                                    //cardConc.prop(\"card/viewUrl\", newViewUrl);\n                                    //measureFormula.lastVisitTime = defaultLastVisitTime;\n                                    //console.log(\"new measureFormula:\" + JSON.stringify(measureFormula));\n                                    //cardConc.prop(\"card/measureFormula\", JSON.stringify(measureFormula));\n                                    //if (apiUrl.indexOf(\"getSubTasks=no\") >= 0){\n                                        //var newapiUrl = apiUrl.substring(0,apiUrl.indexOf(\"getSubTasks=no\")) +\"getSubTasks=yes\"+(((apiUrl.indexOf(\"getSubTasks=no\")+14) < apiUrl.length)?apiUrl.substring(apiUrl.indexOf(\"getSubTasks=no\")+14):\"\");\n                                        //var newapiUrl;\n                                        //if (measureFormula.action == 1){\n                                        //    newapiUrl = \"https://graph.microsoft.com/beta/me/mailFolders/inbox/messages?$top=100&$filter=isRead%20eq%20false\";\n                                        //}else{\n                                        //    newapiUrl = \"https://graph.microsoft.com/beta/me/mailFolders/inbox/messages?$top=100\";\n                                        //}\n                                        cardConc.prop(\"card/apiUrl\", \"https://todoist.com/API/v7/sync?resource_types=%5B%22items%22%5D&sync_token=*\");\n                                        //console.log(\"change api Url from \" + apiUrl + \" to \" + newapiUrl);\n                                        $cjs.session.save();\n                                    //}else if(apiUrl.indexOf(\"getSubTasks\") >= 0){\n                                        //console.log(\"WORNIN!!!!!!!!!!!!!!!!!! url contain getSubTaskss:\"+apiUrl);\n                                    //}\n                                    //findVar(concDef, \"_card_measureFormula\").expr.str = JSON.stringify(measureFormula);\n                                    //$cjs.save(concDef);\n                                //}\n                                \n                                setTimeout(function(){\n                                    $cjs(x._source.uri,{\n                                        evalAll: true\n                                    });\n                                }, 1000);\n                            }catch(error){\n                                console.log(\"error:\"+error+\", for card:\"+x._source.uri);\n                            }\n                        });\n                        console.log(\"Done!\");\n                    },\n                    fail : function(jqXHR, textStatus, errorThrown){\n                        console.log(\"failed to search cards, response:\"+jqXHR.responseText);\n                    }\n                });\n            }\n            \n            function deleteConcept(){\n                var deleteUri = $(\"#deleteUri\").val();\n                $cjs.session.deleteConcept(deleteUri);\n                $cjs.session.save();\n                alert(\"delete is done!\");\n            }\n            \n            function deleteUser(){\n                var userName = $(\"#deleteUser\").val();\n                var confirmFlag = confirm('are you sure you want to delete user:'+userName);\n                if (confirmFlag){\n                    console.log(\"delete user with username:\"+userName);\n                    $cjs.user.deleteUser(userName,\n                        function(){\n                            console.log(userName+\" has been sucessfully deleted!\");\n                        },\n                        function(jqXHR, textStatus, errorThrown){\n                            console.log(\"failed to delete user, response:\"+jqXHR.responseText);\n                        }\n                    )\n                }\n            }\n            \n            function processAllCards(){\n                console.log(\"process cards for yokedevtestuser\");\n                $cjs.admin.executeCommand({\n                    \"command\": \"processAllCards\",\n                    \"userBatch\": false,\n                    \"users\": [\"yoketao29\"]\n                    //\"curi\": \"/lingou/common/2qcKYaJlRL9sm40SuZmVyA/\",\n                    //\"ver\": 56,\n                    //\"ruri\": \"/emci/empersonal/\"\n                });\n                console.log(\"process cards for yokedevtestuser started!\");\n            }\n            \n            function copyConcepts(fromUri, toUri){\n                console.log(\"copy concepts from \" + fromUri + \" to \" + toUri);\n                $cjs.concept({\n                    action: \"COPY\",\n                    srcConceptUri: fromUri,\n                    deepCopy: true,\n                    concept: {\n                        parent: toUri\n                    },\n                    done: function(data){\n                        console.log(\"copy is sucessfull!\");\n                    },\n                    fail : function(jqXHR, textStatus, errorThrown){\n                        console.log(\"failed to copy concepts, response:\"+jqXHR.responseText);\n                    }\n                })\n            }\n            \n            $(function(){\n                $(\"#evalBtn\").on(\"click\", function(){\n                    evalConc(\"/common/yoke/Zj66xRBTUtAzF4I1JhIuNA/\",  11, \"todoist\")\n                });\n                \n                $(\"#evalBtn1\").on(\"click\", function(){\n                    countCards(\"/common/yoke/Zj66xRBTUtAzF4I1JhIuNA/\", 6, \"gmail\")\n                });\n                \n                $(\"#evalBtn2\").on(\"click\", function(){\n                    evalConc(\"/common/yoke/oEL3rNNB0GAGx4320dvd93/\", 3, \"gmail\")\n                });\n                \n                $(\"#evalBtn3\").on(\"click\", function(e){\n                    var uri = $(\"#inputUri\").val();\n                    if (uri){\n                        console.log(\"eval start with \"+uri);\n                        visitChild(uri);\n                        \n                        console.log(\"eval done!\");\n                    }\n                    \n                    e.preventDefault();\n                });\n                \n                $(\"#evalBtn4\").on(\"click\", function(e){\n                    evalUsers(\"/common/admin/tJS-xy42lO8qF4twDxPmwF/\", 3, \"gmail\")\n                    \n                    e.preventDefault();\n                });\n                \n                $(\"#evalBtn5\").on(\"click\", function(e){\n                    patchCards(\"/common/yoke/Zj66xRBTUtAzF4I1JhIuNA/\", 11, \"todoist\")\n                    \n                    e.preventDefault();\n                });\n                \n                $(\"#evalBtn6\").on(\"click\", function(e){\n                    upgradeV2(\"/common/admin/tJS-xy42lO8qF4twDxPmwF/\", 3, \"upgradeV2\")\n                    \n                    e.preventDefault();\n                });\n                \n                $(\"#evalBtn7\").on(\"click\", function(e){\n                    deleteConcept();\n                    \n                    e.preventDefault();\n                });\n                \n                $(\"#evalBtn8\").on(\"click\", function(){\n                    deleteCards(\"/common/yoke/Zj66xRBTUtAzF4I1JhIuNA/\", 7, \"yammer\")\n                });\n                \n                $(\"#evalBtn9\").on(\"click\", function(e){\n                    var uris = [\"/Cuvwb/private/UcslACUHtm8oUKhIBN5LE0/\",\"/DenisChinin/private/qTxHlNhVlNBoNKH9Z5Btl0/\",\"/Dhanush/private/Yz2a6PkFsBBDIa0lsJnqJ4/\",\n                                \"/Gatthias/private/9xHkNfsTxK8n0KMNBipqoE/\",\"/IanYates82/private/Cw_XUyoToxACXKm1kR3IGC/\",\"/Krish/private/_09RBESEWT9EvahgstumaC/\",\n                                \"/Malmoc/private/-5oMFPm1aTBCCqiD_kJyx2/\",\"/Matteoionescu/private/cn0mRrRh_B952aUdl8_GuB/\",\"/Milind/private/5L61sQrgp69kwqVuQKI4NA/\",\n                                \"/Tiger/private/71sWRfM0uSA_maoJb3Rkj5/\",\"/Zetaphor/private/W-ZZ4M5Je_9YbajHg2BdqB/\",\"/amuse_um/private/6MOHR769K89FFaMWRDJaUB/\",\n                                \"/antusti/private/wQelwSzQeiAW8qyrbjYCn8/\",\"/b44st/private/apfhKgaL7QBm04H-oBVuF3/\",\"/cyberfrancis/private/TDXmcH6JmBA5P4_omOzYYA/\",\n                                \"/erichamilt0n/private/2KVtOqwAbmBG1a_rDk8VN5/\",\"/freeworker888/private/x3qJN8R4YB81dqHwdypneF/\",\"/gravortz/private/1SfduX9c5-AffKldMBcrl2/\",\n                                \"/haywoode/private/ZCcehqm9HJ8_yKph4psEc0/\",\"/jasonology/private/hUN9B685Rw9A-av0a8q4-B/\",\"/jordi/private/9MA0YN9SaBA4tqQRBHBp3C/\",\n                                \"/jredapt/private/yCtcaGq4_cBWiajjbY8r1D/\",\"/jrrogers06/private/PGqC1OopZaBw0asT8RLthC/\",\"/ktinboulder/private/xjSZ3bogj18CGKmss8ZhiE/\",\n                                \"/maria/private/u82IfGE6pr95pKmZmGOVBF/\",\"/mikereinmiller/private/hqyB67VkK48nFKZ4dwexzE/\",\"/nikgreen/private/o6DAcDDcDY94u4-TE8FDXC/\",\n                                \"/sadeshina/private/PZQYuUrpMc8Ub4C28SfiDF/\",\"/sbaranov/private/emHUXsMkD-A46KdpcIsjjF/\",\"/skipor/private/fN3Q5UASYiBgVqaJlIEHq1/\",\n                                \"/wardhaarsma/private/nBKaujPYjA8MaamOAtxPNE/\",\"/wilsonben/private/gSdNm4dFAZ9AaqL5-h4pOC/\",\"/wpsitecare/private/jPUaKMo_jL8ig4yRAQO2q4/\",\n                                \"/yomismo/private/leuXyNM8aiBF8aY90S0Tq3/\"];\n                                \n                    evalUsersByUri(uris);\n                    \n                    e.preventDefault();\n                });\n                \n                $(\"#evalBtn10\").on(\"click\", function(){\n                    deleteUser();\n                });\n                \n                $(\"#evalBtn11\").on(\"click\", function(e){\n                    processAllCards()\n                    \n                    e.preventDefault();\n                });\n                \n                $(\"#evalBtn12\").on(\"click\", function(e){\n                    patchConnectors(\"/common/yoke/oEL3rNNB0GAGx4320dvd93/\", 3, \"gmail\");\n                    \n                    e.preventDefault();\n                });\n                \n                $(\"#evalBtn13\").on(\"click\", function(e){\n                    copyConcepts($(\"#fromUri\").val(), $(\"#toUri\").val());\n                    \n                    e.preventDefault();\n                });\n            })\n        </script>\n    </body>\n</html>",
      "strEditMode" : "html",
      "type" : "STRING"
    }
  }, {
    "name" : "page",
    "expr" : {
      "concept" : "/common/core/iduwOQ2KZv8MWqamwqb6AE/",
      "bindings" : {
        "html" : "htmlTemplate"
      },
      "type" : "CONCEPT"
    }
  } ],
  "isas" : [ {
    "var" : "page"
  } ],
  "encodedidxhash" : "",
  "isLambda" : false
}