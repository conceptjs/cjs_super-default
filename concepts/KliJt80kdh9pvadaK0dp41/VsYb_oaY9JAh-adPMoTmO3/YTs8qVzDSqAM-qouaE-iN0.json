{
  "uri" : "local://YTs8qVzDSqAM-qouaE-iN0/",
  "name" : "CJS User Management View",
  "category" : "",
  "parent" : "local://VsYb_oaY9JAh-adPMoTmO3/",
  "flags" : "U",
  "lvars" : [ ],
  "vars" : [ {
    "name" : "htmlTemplate",
    "expr" : {
      "str" : "<html>\n    <head>\n        <link rel=\"stylesheet\" href=\"/resourcelocal://WCW7uMZD9eAnwK20O-_Nu4/\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.datatables.net/1.10.4/css/jquery.dataTables.css\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.datatables.net/tabletools/2.2.3/css/dataTables.tableTools.css\">\n        <link rel=\"stylesheet\" href=\"css/select2/select2.css\">\n        <link rel=\"stylesheet\" href=\"css/select2/select2-bootstrap.css\">\n        \n        <script src=\"js/knockout-3.2.0.js\"></script>\n        <script src=\"js/view.js\"></script>\n        <script type=\"text/javascript\" charset=\"utf8\" src=\"https://cdn.datatables.net/1.10.4/js/jquery.dataTables.js\"></script>\n        <script type=\"text/javascript\" charset=\"utf8\" src=\"https://cdn.datatables.net/tabletools/2.2.3/js/dataTables.tableTools.min.js\"></script>\n        <script type=\"text/javascript\" charset=\"utf8\" src=\"//cdnjs.cloudflare.com/ajax/libs/knockout.mapping/2.4.1/knockout.mapping.min.js\"></script>\n        <script src=\"js/select2.min.js.gz\"></script>\n        \n        \n        <meta name=\"cjsSaveMode\" content=\"auto\">\n        <meta name=\"cjsHeaderActive\" content=\"yes\">\n        \n        <style>\n            td {  word-break: break-all} \n        </style>\n        \n        \n    </head>\n\n    <body>\n        <div class=\"container  usermanagement\">\n            <div class=\"row\">\n                \n\n    <form class=\"form-horizontal\">\n        <div class=\"form-group\">\n\n            <div class=\"col-xs-offset-2 col-xs-8\">\n\n                <input type=\"text\" class=\"form-control\" id=\"inputUser\" placeholder=\"Search User ...\" data-bind=\"value: userName\">\n\n            </div>\n\n        </div>\n        \n        <div class=\"form-group\">\n\n        <div class=\"col-xs-offset-2 col-xs-8\">\n\n            <button type=\"submit\" class=\"btn btn-success\" data-bind=\"click: searchUser\">Search</button>\n\n        </div>\n\n        </div>\n        \n        <div class=\"form-group\">\n\n            <div class=\"col-xs-offset-2 col-xs-8\">\n\n                <div class=\"checkbox\">\n\n                    <label><input id=\"showAllUser\" type=\"checkbox\"> Show all users</label>\n\n                </div>\n\n            </div>\n\n        </div>\n    </form>\n\n\n            </div>\n            <div class=\"row\">\n                <table id=\"userTable\" class=\"display\" cellspacing=\"0\" width=\"100%\">\n                    <thead>\n                        <tr>\n                            <th>User Name</th>\n                            <th>User Email</th>\n                            <th>Twitter</th>\n                            <th>Permission</th>\n                            <th>Delete</th>\n                            <th>URI</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        \n        <div id=\"delete-dialog-confirm\" tabindex=\"-1\" class=\"modal fade\" role=\"dialog\" data-bind=\"modal: delConcDialog.showDialog\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n                        <h4 class=\"modal-title\">Confirm deletion</h4>\n                    </div>\n\n                    <div class=\"modal-body\">\n                        <p><span class=\"fa fa-warning fa-lg\"></span>&nbsp; The User <span data-bind=\"text: deleteUsername\"></span> will be deleted. Are you sure?</p>\n                    </div>\n\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"><span class=\"glyphicon glyphicon-remove\"></span> Close</button>\n                        <button type=\"button\" class=\"btn btn-danger\" data-bind=\"click: delConcDialog.submit\"><span class=\"glyphicon glyphicon-ok\"></span> Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div id=\"response-dialog\" tabindex=\"-1\" class=\"modal fade\" role=\"dialog\" data-bind=\"modal: responseDialog.showDialog\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n                        <h4 class=\"modal-title\">Confirm Assignment</h4>\n                    </div>\n\n                    <div class=\"modal-body\">\n                        <p data-bind=\"text: responseMsg\"></p>\n                    </div>\n\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"><span class=\"glyphicon glyphicon-remove\"></span> Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div id=\"permission-dialog-confirm\" tabindex=\"-1\" class=\"modal fade\" role=\"dialog\" data-bind=\"modal: permissionDialog.showDialog\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n                        <h4 class=\"modal-title\">Confirm Permission Assignment</h4>\n                    </div>\n\n                    <div class=\"modal-body\">\n                        \n    <form class=\"form-inline\">\n        <div class=\"form-group\">\n\n            <label> Assign &nbsp &nbsp </label>\n\n        </div>\n\n        <div class=\"form-group\">\n\n            <input type=\"hidden\" id=\"permission\" name=\"permission\" class=\"form-control\" data-bind=\"value: permission\">\n\n        </div>\n        \n        <div class=\"form-group\">\n\n            <label> on &nbsp &nbsp </label>\n\n        </div>\n\n        <div class=\"form-group\">\n\n            <input type=\"text\" class=\"form-control\" id=\"repo\" placeholder=\"Enter repository ...\" data-bind=\"value: repo\">\n\n        </div>\n\n        <div class=\"form-group\">\n\n            <label data-bind=\"text: permissionUser\"> to </label>\n\n        </div>\n\n    </form>\n                    </div>\n\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"><span class=\"glyphicon glyphicon-remove\"></span> Close</button>\n                        <button type=\"button\" class=\"btn btn-danger\" data-bind=\"click: permissionDialog.submit\"><span class=\"glyphicon glyphicon-ok\"></span> Assign</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n        <script>\n            function topBar(message) {\n                $(\"html, body\").animate({ scrollTop: 0 }, \"slow\");\n                $(\"<div />\", { \"class\": 'topbar', text: message }).hide().prependTo(\"body\").slideDown('fast').delay(5000).slideUp(function() { \n                    $(this).remove(); \n                });\n            }\n            \n            // Helper function so we know what has changed\n            // http://stackoverflow.com/questions/12166982\n            ko.observableArray.fn.subscribeArrayChanged = function(addCallback, deleteCallback) {\n                var previousValue = undefined;\n                this.subscribe(function(_previousValue) {\n                    previousValue = _previousValue.slice(0);\n                }, undefined, 'beforeChange');\n                this.subscribe(function(latestValue) {\n                    var editScript = ko.utils.compareArrays(previousValue, latestValue);\n                    for (var i = 0, j = editScript.length; i < j; i++) {\n                        switch (editScript[i].status) {\n                            case \"retained\":\n                                break;\n                            case \"deleted\":\n                                if (deleteCallback)\n                                    deleteCallback(editScript[i].value);\n                                break;\n                            case \"added\":\n                                if (addCallback)\n                                    addCallback(editScript[i].value);\n                                break;\n                        }\n                    }\n                    previousValue = undefined;\n                });\n            };\n            \n            // User object\n            var Person = function(data, dt) {\n                this.uri    = data.uri;\n                this.username = ko.observable(data.username);\n                this.usernameLink = ko.observable(data.usernameLink);\n                this.email = ko.observable(data.email);\n                this.twitter  = ko.observable(data.twitter);\n                this.permission = ko.observable(data.permission);\n                this.delete = ko.observable(data.delete);\n\n                // Subscribe a listener to the observable properties for the table\n                // and invalidate the DataTables row when they change so it will redraw\n\t            var that = this;\n\t            $.each( [ 'username', 'email', 'twitter', 'permission', 'delete' ], function (i, prop) {\n\t\t            that[ prop ].subscribe( function (val) {\n\t\t\t            // Find the row in the DataTable and invalidate it, which will\n\t\t\t            // cause DataTables to re-read the data\n\t\t\t            var rowIdx = dt.column( 5 ).data().indexOf( that.uri );\n\t\t\t            dt.row( rowIdx ).invalidate();\n\t\t            } );\n\t            } );\n            };\n        \n            var table;\n            var people;\n            var users = {};\n            var dt;\n            var repoUsers;\n        \n            function UserManagementVM(){\n                var self = this;\n                this.deleteUsername = ko.observable('');\n                this.permissionUser = ko.observable('');\n                this.responseMsg = ko.observable(\"\");\n                \n                this.delConcDialog = new DialogVM();\n                \n                this.permissionDialog = new DialogVM();\n                \n                this.responseDialog = new DialogVM();\n                \n                this.userName = ko.observable(\"\");\n                \n                this.repo = ko.observable(\"\");\n                \n                this.permission = ko.observable(\"\");\n                \n                this.searchUser = function(){\n                    findUser(self.userName());\n                }\n            }\n        \n            var userManagementVM = new UserManagementVM();\n            ko.applyBindings(userManagementVM);\n            \n            function deleteUser(data){\n                userManagementVM.deleteUsername(data);\n                userManagementVM.delConcDialog.show(function(){\n                    try{\n                        $cjs.user.deleteUser(data);\n                    }catch(error){\n                        console.log(error);\n                    }\n                    people.splice(_.indexOf(people(), users[data]), 1);\n                });\n            }\n            \n            function assignPermissionUser(username){\n                userManagementVM.permissionUser(\" to \"+username);\n                userManagementVM.permissionDialog.show(function(){\n                    try{\n                        console.log(\"username=\"+username+\",repo=\"+userManagementVM.repo()+\", permission=\"+userManagementVM.permission());\n                        $cjs.assignUserPerm (username, userManagementVM.repo(), Number(userManagementVM.permission()), \n                        function(){\n                            userManagementVM.responseMsg(username + \" has been successfully assigned level \" + userManagementVM.permission() + \" permission on \" + userManagementVM.repo());\n                            userManagementVM.responseDialog.show(function(){});\n                        }, \n                        function(jqXHR, textStatus, errorThrown){\n                            console.log(\"failed to assigne permission:\"+jqXHR.responseText);\n                            topBar('error occurs when assign permission to the user! Check console log');\n    \t                }); \n                    }catch(error){\n                        console.log(error);\n                    }\n                });\n            }\n            \n            function findUser(name){\n                var query;\n                users = {};\n                dt.clear().draw();\n    \t            $cjs.search({\n    \t            uri: \"/common/admin/tJS-xy42lO8qF4twDxPmwF/\",\n    \t            queryJson: {\n    \t                \"bool\": {\n    \t                    \"must\" : {\n    \t                        \"match\" : {\n    \t                           \"_all\" : name\n    \t                        }\n    \t                    },\n    \t                \t\t    \"must_not\": {\n    \t                \t\t\t    \"term\" : {\n        \t                    \t\t    \"name\" : \"private\"\n        \t                    \t    }\n    \t                \t\t    }\n    \t                }\n    \t                \t            \n                    },\n                    size: 10000,\n    \t            done : function(user){\n    \t                if (user.hits.hits.length > 0){\n    \t                                        _.each(user.hits.hits, function(x){\n    \t                                        var hitUser = x;\n    \t                                        var username = hitUser._source.username;\n    \t                                        \n    \t                                        var photoUrl = hitUser._source.photoUrl;\n    \t                                        var newUser = new Person({\n    \t                                            uri: hitUser._source.uri,\n    \t                                            username: username,\n    \t                                            //usernameLink: '<img class=\"user-avatar-image\"  alt=\"\" src=\"'+photoUrl+'\"><a href=\"/ide/'+ username + '/yoke/\" target=\"_blank\">' + username + '</a>',\n    \t                                            usernameLink: '<a href=\"/ide/'+ username + '/yoke/\" target=\"_blank\">' + username + '</a>',\n    \t                                            email: hitUser._source.email,\n    \t                                            twitter: hitUser._source.twitterHandle,\n    \t                                            permission: '<a  href=\"#\" onclick=\"assignPermissionUser(\\''+username+'\\'); return false;\">permission</a>',\n    \t                                            delete: '<a  href=\"#\" onclick=\"deleteUser(\\''+username+'\\'); return false;\">delete</a>'\n    \t                                        }, dt);\n    \t                                        \n    \t                                        //updateUserDetail(newUser);\n    \t                                                        \n                                                //people.push(newUser);\n                                                users[newUser.username()] = newUser;\n                                                people.push(users[username]);\n    \t                               \n    \t                    });                \n    \t                                        \n    \t                }\n    \t            },\n    \t            fail : function(jqXHR, textStatus, errorThrown){\n                        console.log(\"server response:\"+jqXHR.responseText);\n                        topBar('error occurs when retrieving the users!');\n    \t            }\n    \t            });\n            }\n            \n            function refresh(people, dt, yokeUser){\n                var query;\n                users = {};\n                    \n    \t            $cjs.search({\n    \t            uri: \"/common/admin/tJS-xy42lO8qF4twDxPmwF/\",\n    \t            queryJson: {\n                        \"filtered\" : {\n    \t                    \"filter\" : {\n    \t                \t    \"bool\": {\n    \t                \t\t    \"must_not\": {\n    \t                \t\t\t    \"term\" : {\n        \t                    \t\t    \"name\" : \"private\"\n        \t                    \t    }\n    \t                \t\t    }\n    \t                \t    }\n    \t                    }\n    \t                }\n                    },\n                    size: 10000,\n    \t            done : function(user){\n    \t                if (user.hits.hits.length > 0){\n    \t                                        _.each(user.hits.hits, function(x){\n    \t                                        var hitUser = x;\n    \t                                        var username = hitUser._source.username;\n    \t                                        \n    \t                                        var photoUrl = hitUser._source.photoUrl;\n    \t                                        var newUser = new Person({\n    \t                                            uri: hitUser._source.uri,\n    \t                                            username: username,\n    \t                                            //usernameLink: '<img class=\"user-avatar-image\"  alt=\"\" src=\"'+photoUrl+'\"><a href=\"/ide/'+ username + '/yoke/\" target=\"_blank\">' + username + '</a>',\n    \t                                            usernameLink: '<a href=\"/ide/'+ username + '/yoke/\" target=\"_blank\">' + username + '</a>',\n    \t                                            email: hitUser._source.email,\n    \t                                            twitter: hitUser._source.twitterHandle,\n    \t                                            permission: '<a  href=\"javascript:assignPermissionUser(\\''+username+'\\')\">permission</a>',\n    \t                                            delete: '<a  href=\"javascript:deleteUser(\\''+username+'\\')\">delete</a>'\n    \t                                        }, dt);\n    \t                                        \n    \t                                        //updateUserDetail(newUser);\n    \t                                                        \n                                                //people.push(newUser);\n                                                users[newUser.username()] = newUser;\n                                                people.push(users[username]);\n    \t                                        });\n    \t                                        \n    \t                                        \n    \t                                        \n    \t                }\n    \t            },\n    \t            fail : function(jqXHR, textStatus, errorThrown){\n                        console.log(\"server response:\"+jqXHR.responseText);\n                        topBar('error occurs when retrieving the users!');\n    \t            }\n    \t            });\n            }\n            \n            $(function () {\n                people = ko.mapping.fromJS( [] );\n\t            dt = $('#userTable').DataTable( {\n\t\t            columns: [\n\t\t\t            { data: 'usernameLink()', \"width\": \"20%\" },\n\t\t\t            { data: 'email()', \"width\": \"25%\" },\n\t\t\t            { data: 'twitter()', \"width\": \"15%\" },\n\t\t\t            { data: 'permission()', \"width\": \"15%\" },\n\t\t\t            { data: 'delete()', \"width\": \"5%\" },\n\t\t\t            { data: 'uri', \"width\": \"20%\" },\n\t\t            ],\n\t\t            \"order\": [[0, \"asc\"]],\n                    \"dom\": 'T<\"clear\">lfrtip',\n                    \"tableTools\": {\n                        \"sSwfPath\": \"https://cdn.datatables.net/tabletools/2.2.3/swf/copy_csv_xls_pdf.swf\",\n                        \"aButtons\": [\n                        {'sExtends':'copy',\n                            \"oSelectorOpts\": { filter: 'applied', order: 'current' }\n                        },\n                        {'sExtends':'csv',\n                            \"oSelectorOpts\": { filter: 'applied', order: 'current' }\n                        },\n                        {'sExtends':'xls',\n                            \"oSelectorOpts\": { filter: 'applied', order: 'current' }\n                        },\n                        {'sExtends':'pdf',\n                            \"oSelectorOpts\": { filter: 'applied', order: 'current' }\n                        },\n                        {'sExtends':'print',\n                            \"oSelectorOpts\": { filter: 'applied', order: 'current' }\n                        }]\n                    }\n\t            } );\n\n\t            // Update the table when the `people` array has items added or removed\n\t            people.subscribeArrayChanged(\n\t\t            function ( addedItem ) {\n\t\t\t            dt.row.add( addedItem ).draw();\n\t\t            },\n\t\t            function ( deletedItem ) {\n\t\t\t            var rowIdx = dt.column( 5 ).data().indexOf( deletedItem.uri );\n\t\t\t            dt.row( dt.rows()[0][rowIdx] ).remove().draw();\n\t\t            }\n    \t        );\n\n\t            // Convert the data set into observable objects, and will also add the\n\t            // initial data to the table\n\t            var data = [];\n\t            ko.mapping.fromJS(\n\t\t            data,\n\t\t            {\n\t\t            \tkey: function(data) {\n\t\t\t\t            return ko.utils.unwrapObservable(data.uri);        \n\t\t\t            },\n\t\t\t            create: function(options) {\n\t\t\t\t            return new Person(options.data, dt);\n\t\t\t            }    \n\t\t            },\n\t\t            people\n\t            );\n\n                //refresh(people, dt, true);\n                \n                $(\"#showAllUser\").on(\"click\", function(){\n                    if ($(\"#showAllUser\").val()){\n                        refresh(people, dt, true);\n                    }\n                })\n                \n                 $(\"#permission\").select2({\n                            placeholder: \"Select a permission level\",\n                            data: [{\"id\": 1, \"text\": \"1\"}, {\"id\": 2, \"text\": \"2\"}, {\"id\": 3, \"text\": \"3\"}, {\"id\": 4, \"text\": \"4\"}, {\"id\": 5, \"text\": \"5\"}, {\"id\": 6, \"text\": \"6\"}],\n                            width: '150'\n                        }).on(\"change\", function(e) {\n                        });\n            });\n        </script>\n    </body>\n</html>",
      "strEditMode" : "html",
      "type" : "STRING"
    }
  }, {
    "name" : "_page_propertyMap",
    "expr" : {
      "script" : "return {\"anchorUri\": home.anchor().uri()};",
      "type" : "SCRIPT"
    }
  }, {
    "name" : "page",
    "expr" : {
      "concept" : "/common/core/Xfh2VQ4HSK9klqbqqR-eBB/",
      "bindings" : {
        "htmlTemplate" : "htmlTemplate",
        "propertyMap" : "_page_propertyMap"
      },
      "type" : "CONCEPT"
    }
  } ],
  "isas" : [ {
    "var" : "page"
  } ],
  "encodedidxhash" : "",
  "isLambda" : false
}